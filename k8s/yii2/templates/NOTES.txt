1. Get the application URL by running these commands:

{{- if .Values.ingress.enabled }}

  You should be able to access your new Yii2 installation through

  {{- range .Values.ingress.hosts }}
  {{ if .tls }}https{{ else }}http{{ end }}://{{ .name }}
  {{- end }}
  
{{- else if contains "LoadBalancer" .Values.serviceType }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "fullname" . }}'

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "Yii2 URL: http://$SERVICE_IP/"

{{- else if contains "ClusterIP"  .Values.serviceType }}

  echo "Yii2 URL: http://127.0.0.1:8080/"
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "fullname" . }} 8080:80

{{- else if contains "NodePort" .Values.serviceType }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Yii2 URL: http://$NODE_IP:$NODE_PORT/"

{{- end }}
